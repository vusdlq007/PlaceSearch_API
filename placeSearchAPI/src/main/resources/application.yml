server:
  port: 9802
  servlet:
#    encoding:
#      charset: UTF-8
#      enabled: true
#      force: true
    context-path: /


spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#  config:
#    activate:
#      on-profile: local
  datasource:
    url: jdbc:mariadb://localhost:3308/PLACESEARCH
    username: root
    password: 1q2w3e4r1!
    driver-class-name: org.mariadb.jdbc.Driver



  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
    #        open-in-view: false
    generate-ddl: false
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      # none : 아무작업안함. , create : 테이블 생성, update : 없으면 생성 있으면 그대로.
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl   # hibernate의 DB Physical Naming 전략에 따라 입력한 그대로 테이블 및 엔티티에 맵핑. 안하면 Spring boot의 전략으로 CamelCase를 snakecase로변환. (@Table에 입력한 그대로 사용)
    defer-datasource-initialization: true
  sql:
    init:
      encoding: utf-8
  redis:
    lettuce:
      pool:
        max-active: 100          # pool에 할당될 수 있는 커넥션 최대수 (음수로 하면 무제한)
        max-idle: 10             # pool의 "idle" 커넥션 최대수 (음수로 하면 무제한)
        min-idle: 2              # pool에서 관리하는 idle 커넥션의 최소 수 대상 (양수일 때만 유효)
        max-wait: -1             # pool이 바닥났을 때 예외발생 전에 커넥션 할당 차단의 최대 시간 (단위: 밀리세컨드, 음수는 무제한 차단)
    port: 6379
    host: localhost
    password: 'okestro2018'
    timeout: 500                 # 커넥션 타임아웃 (단위: 밀리세컨드)



# log
logging:
  level:
    com: debug
    org:
      springframework: debug
      hibernate:
        type:
          descriptor:
            sql: trace
  config: classpath:logback-spring.xml


# 커스텀 환경변수.
custom:
  service:
    timezone: Asia/Seoul

# 스웨거 request 용 (http://localhost:9802/swagger-ui.html#)
swagger:
  url: localhost:9802